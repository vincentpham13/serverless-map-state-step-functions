{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "LogInvocationTimeLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-map-input-dev-LogInvocationTime"
      }
    },
    "FailFunctionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-map-input-dev-FailFunction"
      }
    },
    "LogDataLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-map-input-dev-LogData"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "serverless-map-input",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-map-input-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-map-input-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "serverless-map-input",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "LogInvocationTimeLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-map-input/dev/1621413198423-2021-05-19T08:33:18.423Z/serverless-map-input.zip"
        },
        "Handler": "handler.LogInvocationTime",
        "Runtime": "nodejs12.x",
        "FunctionName": "serverless-map-input-dev-LogInvocationTime",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LogInvocationTimeLogGroup"
      ]
    },
    "FailFunctionLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-map-input/dev/1621413198423-2021-05-19T08:33:18.423Z/serverless-map-input.zip"
        },
        "Handler": "handler.FailFunction",
        "Runtime": "nodejs12.x",
        "FunctionName": "serverless-map-input-dev-FailFunction",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "FailFunctionLogGroup"
      ]
    },
    "LogDataLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-map-input/dev/1621413198423-2021-05-19T08:33:18.423Z/serverless-map-input.zip"
        },
        "Handler": "handler.LogData",
        "Runtime": "nodejs12.x",
        "FunctionName": "serverless-map-input-dev-LogData",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LogDataLogGroup"
      ]
    },
    "LogInvocationTimeLambdaVersioni8UfczqVvSMYLuq8w1AXmsYVyGXrCpHBcn0itI2c": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LogInvocationTimeLambdaFunction"
        },
        "CodeSha256": "S7nQy8pJVo0cevydxBLpwB58Q/WYaIYmGyVjWyY6dkg="
      }
    },
    "FailFunctionLambdaVersionyb4lyHp6sXP6VbwARe3jxP7ngLEhcBKd1G3ajIbaU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "FailFunctionLambdaFunction"
        },
        "CodeSha256": "S7nQy8pJVo0cevydxBLpwB58Q/WYaIYmGyVjWyY6dkg="
      }
    },
    "LogDataLambdaVersionl5mpQEG9Cm2EI4NfkEEs45YSwOO3dmq08kK4upho": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LogDataLambdaFunction"
        },
        "CodeSha256": "S7nQy8pJVo0cevydxBLpwB58Q/WYaIYmGyVjWyY6dkg="
      }
    },
    "MapInputStepFnRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "dev-us-east-1-serverless-map-input-statemachine",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "FailFunctionLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::GetAtt": [
                              "FailFunctionLambdaFunction",
                              "Arn"
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "LogDataLambdaFunction",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "${functionArn}:*",
                        {
                          "functionArn": {
                            "Fn::GetAtt": [
                              "LogDataLambdaFunction",
                              "Arn"
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "MapInputStepFn": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Sub": [
            "{\n  \"Comment\": \"An example of map-state in step functions\",\n  \"StartAt\": \"ProcessShipments\",\n  \"States\": {\n    \"ProcessShipments\": {\n      \"Type\": \"Map\",\n      \"InputPath\": \"$.detail\",\n      \"ItemsPath\": \"$.shipped\",\n      \"MaxConcurrency\": 10,\n      \"ResultPath\": \"$.detail.shipped\",\n      \"Iterator\": {\n        \"StartAt\": \"GenerateRandomNumber\",\n        \"States\": {\n          \"GenerateRandomNumber\": {\n            \"Type\": \"Task\",\n            \"Resource\": \"${9c522e6f4081d9d9965900130a778065}\",\n            \"Parameters\": {\n              \"FunctionName\": \"${a47cf4aeb7e0db724683db10e17364b0}\",\n              \"Payload\": {\n                \"ShippedItem.$\": \"$\"\n              }\n            },\n            \"TimeoutSeconds\": 12,\n            \"Retry\": [\n              {\n                \"ErrorEquals\": [\n                  \"CustomError\"\n                ],\n                \"IntervalSeconds\": 1,\n                \"MaxAttempts\": 3,\n                \"BackoffRate\": 1\n              }\n            ],\n            \"Catch\": [\n              {\n                \"ErrorEquals\": [\n                  \"CustomError\"\n                ],\n                \"Next\": \"CommitNumberResult\"\n              }\n            ],\n            \"Next\": \"LogData\"\n          },\n          \"CommitNumberResult\": {\n            \"Type\": \"Pass\",\n            \"Result\": \"Can not generate the number less than 50\",\n            \"Next\": \"LogData\"\n          },\n          \"LogData\": {\n            \"Type\": \"Task\",\n            \"Resource\": \"${75926682c097e512e724c0e0c31b1b9b}\",\n            \"End\": true\n          }\n        }\n      },\n      \"End\": true\n    }\n  }\n}",
            {
              "9c522e6f4081d9d9965900130a778065": {
                "Fn::GetAtt": [
                  "FailFunctionLambdaFunction",
                  "Arn"
                ]
              },
              "a47cf4aeb7e0db724683db10e17364b0": {
                "Ref": "FailFunctionLambdaFunction"
              },
              "75926682c097e512e724c0e0c31b1b9b": {
                "Fn::GetAtt": [
                  "LogDataLambdaFunction",
                  "Arn"
                ]
              }
            }
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "MapInputStepFnRole",
            "Arn"
          ]
        },
        "StateMachineName": "MapInputStepFn"
      },
      "DependsOn": [
        "MapInputStepFnRole"
      ]
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-serverless-map-input",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "ApiGatewayResourceTrigger": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "trigger",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodTriggerPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "AuthorizationType": "NONE",
        "ApiKeyRequired": false,
        "ResourceId": {
          "Ref": "ApiGatewayResourceTrigger"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS",
          "Credentials": {
            "Fn::GetAtt": [
              "ApigatewayToStepFunctionsRole",
              "Arn"
            ]
          },
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":states:action/StartExecution"
              ]
            ]
          },
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": {
              "Fn::Sub": [
                "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                {
                  "StateMachineArn": {
                    "Ref": "MapInputStepFn"
                  }
                }
              ]
            },
            "application/x-www-form-urlencoded": {
              "Fn::Sub": [
                "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                {
                  "StateMachineArn": {
                    "Ref": "MapInputStepFn"
                  }
                }
              ]
            }
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200,
              "SelectionPattern": 200,
              "ResponseParameters": {},
              "ResponseTemplates": {}
            },
            {
              "StatusCode": 400,
              "SelectionPattern": 400,
              "ResponseParameters": {},
              "ResponseTemplates": {}
            }
          ]
        },
        "MethodResponses": [
          {
            "ResponseParameters": {},
            "ResponseModels": {},
            "StatusCode": 200
          },
          {
            "ResponseParameters": {},
            "ResponseModels": {},
            "StatusCode": 400
          }
        ]
      }
    },
    "ApigatewayToStepFunctionsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "apigatewaytostepfunctions",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "states:StartExecution"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "ApiGatewayDeployment1621413192452": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodTriggerPost"
      ]
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-serverless-map-input-dev-ServerlessDeploymentBucketName"
      }
    },
    "LogInvocationTimeLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LogInvocationTimeLambdaVersioni8UfczqVvSMYLuq8w1AXmsYVyGXrCpHBcn0itI2c"
      },
      "Export": {
        "Name": "sls-serverless-map-input-dev-LogInvocationTimeLambdaFunctionQualifiedArn"
      }
    },
    "FailFunctionLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "FailFunctionLambdaVersionyb4lyHp6sXP6VbwARe3jxP7ngLEhcBKd1G3ajIbaU"
      },
      "Export": {
        "Name": "sls-serverless-map-input-dev-FailFunctionLambdaFunctionQualifiedArn"
      }
    },
    "LogDataLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LogDataLambdaVersionl5mpQEG9Cm2EI4NfkEEs45YSwOO3dmq08kK4upho"
      },
      "Export": {
        "Name": "sls-serverless-map-input-dev-LogDataLambdaFunctionQualifiedArn"
      }
    },
    "MapInputStepFnArn": {
      "Description": "Current StateMachine Arn",
      "Value": {
        "Ref": "MapInputStepFn"
      },
      "Export": {
        "Name": "sls-serverless-map-input-dev-MapInputStepFnArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-serverless-map-input-dev-ServiceEndpoint"
      }
    }
  }
}