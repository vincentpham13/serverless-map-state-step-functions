{
  "service": {
    "service": "serverless-map-input",
    "serviceObject": {
      "name": "serverless-map-input"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "lambdaHashingVersion": "20201221",
      "stage": "dev",
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "LogInvocationTimeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-map-input-dev-LogInvocationTime"
            }
          },
          "FailFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-map-input-dev-FailFunction"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-map-input",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-map-input-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-map-input-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-map-input",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "LogInvocationTimeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-map-input/dev/1617185791072-2021-03-31T10:16:31.072Z/serverless-map-input.zip"
              },
              "Handler": "handler.LogInvocationTime",
              "Runtime": "nodejs12.x",
              "FunctionName": "serverless-map-input-dev-LogInvocationTime",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LogInvocationTimeLogGroup"
            ]
          },
          "FailFunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-map-input/dev/1617185791072-2021-03-31T10:16:31.072Z/serverless-map-input.zip"
              },
              "Handler": "handler.FailFunction",
              "Runtime": "nodejs12.x",
              "FunctionName": "serverless-map-input-dev-FailFunction",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FailFunctionLogGroup"
            ]
          },
          "LogInvocationTimeLambdaVersionktEtzIgM0A2N6NIhMXGz6cWFMbXeZnKS1bmL0CoBU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LogInvocationTimeLambdaFunction"
              },
              "CodeSha256": "GlG6FkS9yyj2sz7HP5ulx/vdSURu/rDk5nwQe8la0iY="
            }
          },
          "FailFunctionLambdaVersionw219zpb7Gvl1AkJeUKRvy3wlfzEUdoN3963QeCwl5Q": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FailFunctionLambdaFunction"
              },
              "CodeSha256": "GlG6FkS9yyj2sz7HP5ulx/vdSURu/rDk5nwQe8la0iY="
            }
          },
          "MapInputStepFnRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "states.us-east-1.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "dev-us-east-1-serverless-map-input-statemachine",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "FailFunctionLambdaFunction",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::Sub": [
                              "${functionArn}:*",
                              {
                                "functionArn": {
                                  "Fn::GetAtt": [
                                    "FailFunctionLambdaFunction",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "MapInputStepFn": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "DefinitionString": {
                "Fn::Sub": [
                  "{\n  \"Comment\": \"An example of map-state in step functions\",\n  \"StartAt\": \"ProcessShipments\",\n  \"States\": {\n    \"ProcessShipments\": {\n      \"Type\": \"Map\",\n      \"InputPath\": \"$.detail\",\n      \"ItemsPath\": \"$.shipped\",\n      \"MaxConcurrency\": 5,\n      \"ResultPath\": \"$.detail.shipped\",\n      \"Iterator\": {\n        \"StartAt\": \"GenerateRandomNumber\",\n        \"States\": {\n          \"GenerateRandomNumber\": {\n            \"Type\": \"Task\",\n            \"Resource\": \"${9c522e6f4081d9d9965900130a778065}\",\n            \"Parameters\": {\n              \"FunctionName\": \"${a47cf4aeb7e0db724683db10e17364b0}\",\n              \"Payload\": {\n                \"ShippedItem.$\": \"$\"\n              }\n            },\n            \"TimeoutSeconds\": 12,\n            \"Retry\": [\n              {\n                \"ErrorEquals\": [\n                  \"CustomError\"\n                ],\n                \"IntervalSeconds\": 1,\n                \"MaxAttempts\": 3,\n                \"BackoffRate\": 1\n              }\n            ],\n            \"Catch\": [\n              {\n                \"ErrorEquals\": [\n                  \"CustomError\"\n                ],\n                \"Next\": \"CommitNumberResult\"\n              }\n            ],\n            \"End\": true\n          },\n          \"CommitNumberResult\": {\n            \"Type\": \"Pass\",\n            \"Result\": \"Can not generate the number less than 50\",\n            \"End\": true\n          }\n        }\n      },\n      \"End\": true\n    }\n  }\n}",
                  {
                    "9c522e6f4081d9d9965900130a778065": {
                      "Fn::GetAtt": [
                        "FailFunctionLambdaFunction",
                        "Arn"
                      ]
                    },
                    "a47cf4aeb7e0db724683db10e17364b0": {
                      "Ref": "FailFunctionLambdaFunction"
                    }
                  }
                ]
              },
              "RoleArn": {
                "Fn::GetAtt": [
                  "MapInputStepFnRole",
                  "Arn"
                ]
              },
              "StateMachineName": "MapInputStepFn"
            },
            "DependsOn": [
              "MapInputStepFnRole"
            ]
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-map-input",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceTrigger": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "trigger",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodTriggerPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "AuthorizationType": "NONE",
              "ApiKeyRequired": false,
              "ResourceId": {
                "Ref": "ApiGatewayResourceTrigger"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS",
                "Credentials": {
                  "Fn::GetAtt": [
                    "ApigatewayToStepFunctionsRole",
                    "Arn"
                  ]
                },
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":states:action/StartExecution"
                    ]
                  ]
                },
                "PassthroughBehavior": "NEVER",
                "RequestTemplates": {
                  "application/json": {
                    "Fn::Sub": [
                      "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                      {
                        "StateMachineArn": {
                          "Ref": "MapInputStepFn"
                        }
                      }
                    ]
                  },
                  "application/x-www-form-urlencoded": {
                    "Fn::Sub": [
                      "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                      {
                        "StateMachineArn": {
                          "Ref": "MapInputStepFn"
                        }
                      }
                    ]
                  }
                },
                "IntegrationResponses": [
                  {
                    "StatusCode": 200,
                    "SelectionPattern": 200,
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  },
                  {
                    "StatusCode": 400,
                    "SelectionPattern": 400,
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  }
                ]
              },
              "MethodResponses": [
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": 200
                },
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": 400
                }
              ]
            }
          },
          "ApigatewayToStepFunctionsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "apigateway.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "apigatewaytostepfunctions",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "states:StartExecution"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "ApiGatewayDeployment1617185785829": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodTriggerPost"
            ]
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "LogInvocationTimeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LogInvocationTimeLambdaVersionktEtzIgM0A2N6NIhMXGz6cWFMbXeZnKS1bmL0CoBU"
            }
          },
          "FailFunctionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FailFunctionLambdaVersionw219zpb7Gvl1AkJeUKRvy3wlfzEUdoN3963QeCwl5Q"
            }
          },
          "MapInputStepFnArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "MapInputStepFn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-step-functions"
    ],
    "pluginsData": {},
    "functions": {
      "LogInvocationTime": {
        "handler": "handler.LogInvocationTime",
        "events": [],
        "name": "serverless-map-input-dev-LogInvocationTime",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "LogInvocationTimeLambdaVersionktEtzIgM0A2N6NIhMXGz6cWFMbXeZnKS1bmL0CoBU"
      },
      "FailFunction": {
        "handler": "handler.FailFunction",
        "events": [],
        "name": "serverless-map-input-dev-FailFunction",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "FailFunctionLambdaVersionw219zpb7Gvl1AkJeUKRvy3wlfzEUdoN3963QeCwl5Q"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "stepFunctions": {
        "stateMachines": {
          "MapInputStepFn": {
            "events": [
              {
                "http": {
                  "method": "POST",
                  "path": "trigger"
                }
              }
            ],
            "name": "MapInputStepFn",
            "definition": {
              "Comment": "An example of map-state in step functions",
              "StartAt": "ProcessShipments",
              "States": {
                "ProcessShipments": {
                  "Type": "Map",
                  "InputPath": "$.detail",
                  "ItemsPath": "$.shipped",
                  "MaxConcurrency": 5,
                  "ResultPath": "$.detail.shipped",
                  "Iterator": {
                    "StartAt": "GenerateRandomNumber",
                    "States": {
                      "GenerateRandomNumber": {
                        "Type": "Task",
                        "Resource": {
                          "Fn::GetAtt": [
                            "FailFunction",
                            "Arn"
                          ]
                        },
                        "Parameters": {
                          "FunctionName": {
                            "Ref": "FailFunction"
                          },
                          "Payload": {
                            "ShippedItem.$": "$"
                          }
                        },
                        "TimeoutSeconds": 12,
                        "Retry": [
                          {
                            "ErrorEquals": [
                              "CustomError"
                            ],
                            "IntervalSeconds": 1,
                            "MaxAttempts": 3,
                            "BackoffRate": 1
                          }
                        ],
                        "Catch": [
                          {
                            "ErrorEquals": [
                              "CustomError"
                            ],
                            "Next": "CommitNumberResult"
                          }
                        ],
                        "End": true
                      },
                      "CommitNumberResult": {
                        "Type": "Pass",
                        "Result": "Can not generate the number less than 50",
                        "End": true
                      }
                    }
                  },
                  "End": true
                }
              }
            }
          }
        }
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": false,
    "stepFunctions": {
      "stateMachines": {
        "MapInputStepFn": {
          "events": [
            {
              "http": {
                "method": "post",
                "path": "trigger"
              }
            }
          ],
          "name": "MapInputStepFn",
          "definition": {
            "Comment": "An example of map-state in step functions",
            "StartAt": "ProcessShipments",
            "States": {
              "ProcessShipments": {
                "Type": "Map",
                "InputPath": "$.detail",
                "ItemsPath": "$.shipped",
                "MaxConcurrency": 5,
                "ResultPath": "$.detail.shipped",
                "Iterator": {
                  "StartAt": "GenerateRandomNumber",
                  "States": {
                    "GenerateRandomNumber": {
                      "Type": "Task",
                      "Resource": "${9c522e6f4081d9d9965900130a778065}",
                      "Parameters": {
                        "FunctionName": "${a47cf4aeb7e0db724683db10e17364b0}",
                        "Payload": {
                          "ShippedItem.$": "$"
                        }
                      },
                      "TimeoutSeconds": 12,
                      "Retry": [
                        {
                          "ErrorEquals": [
                            "CustomError"
                          ],
                          "IntervalSeconds": 1,
                          "MaxAttempts": 3,
                          "BackoffRate": 1
                        }
                      ],
                      "Catch": [
                        {
                          "ErrorEquals": [
                            "CustomError"
                          ],
                          "Next": "CommitNumberResult"
                        }
                      ],
                      "End": true
                    },
                    "CommitNumberResult": {
                      "Type": "Pass",
                      "Result": "Can not generate the number less than 50",
                      "End": true
                    }
                  }
                },
                "End": true
              }
            }
          }
        }
      },
      "activities": []
    },
    "artifact": "/mnt/c/Users/nhat.pham/vincentpham13/serverless-map-input/.serverless/serverless-map-input.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-map-input/dev/1617185791072-2021-03-31T10:16:31.072Z",
    "artifact": "serverless-map-input.zip"
  }
}